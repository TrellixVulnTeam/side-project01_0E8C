.btn{
    text-decoration: none;  
    &:link,&:visited{
        text-decoration: none;
        display: inline-block;
        font-size: 1.6rem;
        padding: 1rem;
        margin-top: 5rem;
        border-radius: 10rem;
        transition: all .3s;
        position: relative;
    }
    &:hover{
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 1rem  rgba($color-black, .2) ;

        /* 由後往前解析比較好理解  我們要調整:after這個偽元素 必且當它是被hover摸到的時候 */
        &::after{
        transform: scale(1.5,1.7);
        opacity: 0;
    }
    }
    
    &:active{
        transform: translateY(-0.1rem);
        box-shadow: 0 0.5rem 1rem  rgba($color-black, .2) ;
    }
    
    &--white{
        color: $color-grey-dark;
        background-color: $color-white;

        &::after{
            background-color: $color-white;
        }
    }
    
    /* 利用偽元素製造殘影擴大再消失的外觀 */
    
    /* 當一個物件加上偽元素時，產生出來的偽物件可以看成原本物件的子物件  兩者擁有父子層關係 所以當寬高設100%就表示要一樣大 */
    &::after{
        content: "";
        display: inline-block;
        width: 100%;
        height: 100%;
        border-radius: 100px;
        /* 設定絕對位置 並在父層加上relative 然後位置設0 這樣就能重疊在父元素上 但是為了讓父元素在上面 這邊增加z-index-1 讓子元素到下面 */
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        /* 增加轉場  在hover狀態下設透明度0 這樣透明度就回由1至0 產生消失的效果 */
        transition: all .3s ease-out;
    }
    
    &--animated{
        /* 這邊加延遲是為了造成時間差 先讓標題的動畫跑完再跑按鈕的動畫 */
        animation: moveInBtn .5s .75s;
        /* 這個屬性能決定下動畫的物件一開始要用動畫效果的哪一偵為狀態   backwards會以動畫開始的第一偵為物件的狀態 這邊加這個是因為 按鈕動畫有設延遲 所以一開始他會出現在螢幕上 過0.75秒後才會開始跑動畫 進入到opacity0的狀態  下這個的話能讓物件直接進入動畫開始跑第一偵的狀態 */
        animation-fill-mode: backwards;
    }
    }